{
	"info": {
		"_postman_id": "1c15cb9e-7674-47d3-a1c0-bd8ede5e4479",
		"name": "Test API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "positive testcases",
			"item": [
				{
					"name": "Get person successful",
					"item": [
						{
							"name": "get list persons successful",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"const schema = {\r",
											"\"type\": \"array\",\r",
											"\"items\":\r",
											"{\r",
											"\"type\": \"object\",\r",
											"\"Properties\":\r",
											"{\r",
											"\"id\": {\"type\": \"integer\"},\r",
											"\"name\": {\"type\": \"string\"},\r",
											"\"address\": {\"type\": \"string\"},\r",
											"\"phoneNumber\": {\"type\": \"string\"},\r",
											"\"email1\": {\"type\": \"int\"},\r",
											"}\r",
											"}\r",
											"};\r",
											"pm.test (\"get list all persons successful\",function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test (\"scheme validate\",function(){\r",
											"   pm.response.to.have.jsonSchema(schema);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "d31fed53-5620-4b8e-a3fa-ed5ea328cc56",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "https://localhost:44353/persons"
							},
							"response": []
						},
						{
							"name": "get list persons with Page size successful",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"get list persons with page size successful\",function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(Object.keys(pm.response.json()).length).to.eql(10);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "6930fe25-9eb7-497b-ad7d-472f1e533de7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44353/persons?pageSize=10",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44353",
									"path": [
										"persons"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get person with specific id successful",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"check data person with specify id\",function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    const reponseJson = pm.response.json();\r",
											"    pm.expect(reponseJson).to.have.property(\"id\",3);\r",
											"    pm.expect(reponseJson).to.have.property(\"name\",\"Person 3\");\r",
											"    pm.expect(reponseJson).to.have.property(\"address\",\"Address 3\");\r",
											"    pm.expect(reponseJson).to.have.property(\"phoneNumber\",\"Phone Number 3\");\r",
											"    pm.expect(reponseJson).to.have.property(\"email\",\"Email 3\");\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "2b05dc8f-ba27-4510-9515-ad4e7a86d2c0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44353/persons/:id",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44353",
									"path": [
										"persons",
										":id"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"type": "text",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "3",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_id": "fae8f32a-838c-43fe-b950-94de72717557",
					"_postman_isSubFolder": true
				},
				{
					"name": "create person succesful",
					"item": [
						{
							"name": "create new person successful",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"create new person successful\",function(){\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "7316bbfb-2f7c-4962-a473-ea06bdeecf4b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 0,\r\n  \"name\": \"string\",\r\n  \"address\": \"string\",\r\n  \"phoneNumber\": \"string\",\r\n  \"email\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://localhost:44353/persons"
							},
							"response": []
						},
						{
							"name": "get person that has just created successful",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"Check data person that has just created\",function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    const reponseJson = pm.response.json();\r",
											"    pm.expect(reponseJson).to.have.property(\"id\",3);\r",
											"    pm.expect(reponseJson).to.have.property(\"name\",\"Person 3\");\r",
											"    pm.expect(reponseJson).to.have.property(\"address\",\"Address 3\");\r",
											"    pm.expect(reponseJson).to.have.property(\"phoneNumber\",\"Phone Number 3\");\r",
											"    pm.expect(reponseJson).to.have.property(\"email\",\"Email 3\");\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "69136835-2072-49d2-bf54-3ac83a29a882",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44353/persons/:id",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44353",
									"path": [
										"persons",
										":id"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"type": "text",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "20",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_id": "a6d7c510-6e51-431d-9b69-dc72df332b17",
					"_postman_isSubFolder": true
				},
				{
					"name": "update person successful",
					"item": [
						{
							"name": "update person successful",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"update person with valid data and save successful\",function(){\r",
											"    pm.response.to.have.status(204);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "a171faba-7a1e-4c25-82fb-d809c13bdcdc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 12,\r\n  \"name\": \"string 12\",\r\n  \"address\": \"string\",\r\n  \"phoneNumber\": \"string\",\r\n  \"email\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44353/persons/:id",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44353",
									"path": [
										"persons",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "12",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get person that has just updated successful",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"check data person that has just updated \",function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    const reponseJson = pm.response.json();\r",
											"    pm.expect(reponseJson).to.have.property(\"id\",12);\r",
											"    pm.expect(reponseJson).to.have.property(\"name\",\"string 12\");\r",
											"    pm.expect(reponseJson).to.have.property(\"address\",\"string\");\r",
											"    pm.expect(reponseJson).to.have.property(\"phoneNumber\",\"string\");\r",
											"    pm.expect(reponseJson).to.have.property(\"email\",\"string\");\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "1fffd95a-a229-4d87-b3d9-71ee69bd7042",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44353/persons/:id",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44353",
									"path": [
										"persons",
										":id"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"type": "text",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "12",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_id": "639bdda5-0435-4842-95ea-9625066dee79",
					"_postman_isSubFolder": true
				},
				{
					"name": "delete person successful",
					"item": [
						{
							"name": "delete person successful",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"update person with valid data and save successful\",function(){\r",
											"    pm.response.to.have.status(204);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "993b2888-d19d-45cc-8ce3-61712378bd52",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 12,\r\n  \"name\": \"string 12\",\r\n  \"address\": \"string\",\r\n  \"phoneNumber\": \"string\",\r\n  \"email\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44353/persons/:id",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44353",
									"path": [
										"persons",
										":id"
									],
									"variable": [
										{
											"id": "136c4cf3-dcbf-42f8-bc7e-6dfbbb60c1cb",
											"key": "id",
											"value": "12",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get person that has just deleted",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"check error when getting person just deleted \",function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "bdea2f26-ccbf-42dc-86fd-dfb29b23e0a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44353/persons/:id",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44353",
									"path": [
										"persons",
										":id"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"type": "text",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "30",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_id": "fdd41688-eb66-4dce-9f0d-4467bda597d1",
					"_postman_isSubFolder": true
				}
			],
			"_postman_id": "ce401d4c-c01f-4c73-b245-1d1c2ab97a90"
		},
		{
			"name": "negative test cases",
			"item": [
				{
					"name": "create person with invalid data",
					"item": [
						{
							"name": "create new person with wrong datatype",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"check error code when create new person with wrong datatype\",function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "133a3f22-c419-4736-bbd9-92c4c1182332",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"test\",\r\n  \"name\": \"string\",\r\n  \"address\": \"string\",\r\n  \"phoneNumber\": \"string\",\r\n  \"email\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://localhost:44353/persons"
							},
							"response": []
						},
						{
							"name": "create new person with empty data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"check error code when create new person with wrong datatype\",function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "dde59785-1371-4b19-9c25-b7b62fdd1aab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"test\",\r\n  \"name\": \"string\",\r\n  \"address\": \"string\",\r\n  \"phoneNumber\": \"string\",\r\n  \"email\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://localhost:44353/persons"
							},
							"response": []
						},
						{
							"name": "create new person that already exists",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"check error code when create new person with wrong datatype\",function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "f951d63b-a123-43c8-b517-0a6b5e043f46",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"test\",\r\n  \"name\": \"string\",\r\n  \"address\": \"string\",\r\n  \"phoneNumber\": \"string\",\r\n  \"email\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://localhost:44353/persons"
							},
							"response": []
						}
					],
					"_postman_id": "d48fa14b-2f1e-42e8-a1a8-45682e50f6e2",
					"_postman_isSubFolder": true
				},
				{
					"name": "update person with invalid data",
					"item": [
						{
							"name": "update person with wrong datatype",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"check error when updating person with wrong datatype\",function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "bd613bf8-a579-42c5-a1c3-3e04bc0bfc67",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"haha\",\r\n  \"name\": \"string 12\",\r\n  \"address\": \"string\",\r\n  \"phoneNumber\": \"string\",\r\n  \"email\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44353/persons/:id",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44353",
									"path": [
										"persons",
										":id"
									],
									"variable": [
										{
											"id": "ff0e1106-693c-4f79-b6e3-0581e4d5114c",
											"key": "id",
											"value": "12",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "update person with empty data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
										"exec": [
											"pm.test (\"check error when updating person with empty data\",function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"_postman_id": "431a5b03-666a-483f-b8ff-f4cf66f5d022",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44353/persons/:id",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44353",
									"path": [
										"persons",
										":id"
									],
									"variable": [
										{
											"id": "ff0e1106-693c-4f79-b6e3-0581e4d5114c",
											"key": "id",
											"value": "12",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_id": "0eeebf9b-3aa2-4f78-80a2-d236b793fa86",
					"_postman_isSubFolder": true
				},
				{
					"name": "get person with invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b43f9784-b73d-496b-a189-9b1ba66a2f4c",
								"exec": [
									"pm.test (\"error when getting person with invalid id\",function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "875f260b-d9fa-4b1a-9660-11115b9d1059",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44353/persons/:id",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44353",
							"path": [
								"persons",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "test",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete person that already deleted",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
								"exec": [
									"pm.test (\"update person with valid data and save successful\",function(){\r",
									"    pm.response.to.have.status(204);\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "c531624b-aa1b-4f08-b8b3-e0f53253459b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44353/persons/:id",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44353",
							"path": [
								"persons",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "12",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete person with invalid id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "474e3636-fc9c-4e06-b567-0f55f4c90f27",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "aa0d7a87-0aa6-46fa-9a08-2614b809942f",
								"exec": [
									"pm.test (\"check error when deleting person with invalid id\",function(){\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"_postman_id": "0f5bac89-4364-42ad-bd9c-48e8efad0105",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44353/persons/:id",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44353",
							"path": [
								"persons",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "test",
									"type": "string"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "e1e95ef5-f4b7-4a06-9063-ac3c33e0472e"
		}
	]
}